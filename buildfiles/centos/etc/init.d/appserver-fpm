#!/bin/bash

### BEGIN INIT INFO
# Provides:          appserver-fpm
# Required-Start:    $all
# Required-Stop:     $all
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: starts/stops appserver-fpm
# Description:       Control sript for the appserver-fpm. Makes use of /etc/init.d/functions
### END INIT INFO

# Define constants holding our execution setup
PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
BASE_PATH='/opt/appserver'
DAEMON="${BASE_PATH}/sbin/php-fpm"
DAEMON_OPTS="-D -c /opt/appserver/etc/ -y /opt/appserver/etc/php-fpm.conf"
NAME="appserver-fpm"
DESC="appserver-fpm"
PIDFILE="/var/run/${NAME}.pid"

# Include the functions file as we need it for the "killproc" command
. /etc/init.d/functions

# Start script is implemented manually as we had problems with the "daemon" command
# @TODO switch to "daemon" command for a unified look and feel
start() {
    printf "%-50s" "Starting $NAME..."
    cd $BASE_PATH
	PID=`$DAEMON $DAEMON_OPTS > /dev/null 2>&1 & echo $!`
	#echo "Saving PID" $PID " to " $PIDFILE

	if [ -z $PID ]; then
	    printf "%s\n" "Fail"
	else
	    echo $PID > $PIDFILE
	    printf "%s\n" "Ok"
	fi
}

stop() {
    printf "%-50s" "Stopping $NAME..."
    killproc $NAME
    RETVAL=$?
    echo
    [ $RETVAL -eq 0 ] && rm -f $PIDFILE
    return $RETVAL
}

case "$1" in
  start)
	start
	;;
  stop)
	stop
	;;
  restart|force-reload)
	stop
	start
	;;
  status)
    status $NAME
	;;
  *)
	N=/etc/init.d/$NAME
	echo "Usage: $N {start|stop|restart|force-reload|status}" >&2
	exit 1
	;;
esac

exit 0
